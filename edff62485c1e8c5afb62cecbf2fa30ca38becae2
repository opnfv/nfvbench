{
  "comments": [
    {
      "key": {
        "uuid": "19f6a897_8d9d02b2",
        "filename": "nfvbench/compute.py",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 5807
      },
      "writtenOn": "2019-12-08T19:52:14Z",
      "side": 1,
      "message": "This open requires specifying \"rb\" mode explicitly.\nOtherwise the code reads the file in utf-8 mode and throws:\n2019-12-08 18:31:35,594 ERROR Traceback (most recent call last):\n  File \"/nfvbench/nfvbench/compute.py\", line 58, in upload_image_via_url\n    self.glance_client.images.upload(img.id, image_data\u003df_image)\n  File \"/usr/local/lib/python3.6/dist-packages/wrapt/wrappers.py\", line 603, in __call__\n    args, kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/glanceclient/common/utils.py\", line 535, in inner\n    return RequestIdProxy(wrapped(*args, **kwargs))\n  File \"/usr/local/lib/python3.6/dist-packages/glanceclient/v2/images.py\", line 231, in upload\n    resp, body \u003d self.http_client.put(url, headers\u003dhdrs, data\u003dbody)\n  File \"/usr/local/lib/python3.6/dist-packages/keystoneauth1/adapter.py\", line 395, in put\n    return self.request(url, \u0027PUT\u0027, **kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/glanceclient/common/http.py\", line 328, in request\n    **kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/keystoneauth1/adapter.py\", line 248, in request\n    return self.session.request(url, method, **kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/keystoneauth1/session.py\", line 913, in request\n    resp \u003d send(**kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/keystoneauth1/session.py\", line 1004, in _send_request\n    resp \u003d self.session.request(method, url, **kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/requests/sessions.py\", line 533, in request\n    resp \u003d self.send(prep, **send_kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/requests/sessions.py\", line 646, in send\n    r \u003d adapter.send(request, **kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/requests/adapters.py\", line 469, in send\n    for i in request.body:\n  File \"/usr/local/lib/python3.6/dist-packages/glanceclient/common/http.py\", line 65, in _chunk_body\n    chunk \u003d body.read(CHUNKSIZE)\n  File \"/usr/lib/python3.6/encodings/ascii.py\", line 26, in decode\n    return codecs.ascii_decode(input, self.errors)[0]\nUnicodeDecodeError: \u0027ascii\u0027 codec can\u0027t decode byte 0xfb in position 3: ordinal not in range(128)",
      "revId": "edff62485c1e8c5afb62cecbf2fa30ca38becae2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0cdad50_c3e57a52",
        "filename": "nfvbench/packet_stats.py",
        "patchSetId": 3
      },
      "lineNbr": 295,
      "author": {
        "id": 5807
      },
      "writtenOn": "2019-12-08T20:28:43Z",
      "side": 1,
      "message": "Here again we can no longer mix key types in same dict.\nMust use str(index) as key\n\nTo repro issue, run any multi-chain benchmark with N\u003e1\n2019-12-08 20:00:58,865 INFO ...traffic generating ended.\n2019-12-08 20:00:58,872 INFO Service chain \u0027PVP\u0027 run completed.\n2019-12-08 20:00:58,873 INFO Clean up skipped.\n2019-12-08 20:00:58,918 ERROR {\u0027status\u0027: \u0027ERROR\u0027, \u0027error_message\u0027: \u0027Traceback (most recent call last):\\n  File \"/nfvbench/nfvbench/nfvbench.py\", line 682, in main\\n    nfvbench_instance.prepare_summary(result[\\\u0027result\\\u0027])\\n  File \"/nfvbench/nfvbench/nfvbench.py\", line 157, in prepare_summary\\n    summary \u003d NFVBenchSummarizer(result, fluent_logger)\\n  File \"/nfvbench/nfvbench/summarizer.py\", line 265, in __init__\\n    self.__summarize()\\n  File \"/nfvbench/nfvbench/summarizer.py\", line 313, in __summarize\\n    self.__chain_summarize(*result)\\n  File \"/nfvbench/nfvbench/summarizer.py\", line 321, in __chain_summarize\\n    self.__traffic_summarize(chain_benchmark[\\\u0027result\\\u0027])\\n  File \"/nfvbench/nfvbench/summarizer.py\", line 351, in __traffic_summarize\\n    self.__chain_analysis_summarize(*entry)\\n  File \"/nfvbench/nfvbench/summarizer.py\", line 384, in __chain_analysis_summarize\\n    self._put_table(self._get_chain_table(analysis[\\\u0027packet_path_stats\\\u0027][dir]))\\n  File \"/nfvbench/nfvbench/summarizer.py\", line 512, in _get_chain_table\\n    for chain in sorted(chains.keys()):\\nTypeError: \\\u0027\u003c\\\u0027 not supported between instances of \\\u0027int\\\u0027 and \\\u0027str\\\u0027\\n\u0027}\n\u0027\u003c\u0027 not supported between instances of \u0027int\u0027 and \u0027str\u0027",
      "revId": "edff62485c1e8c5afb62cecbf2fa30ca38becae2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "011829c0_032a9d45",
        "filename": "nfvbench/packet_stats.py",
        "patchSetId": 3
      },
      "lineNbr": 314,
      "author": {
        "id": 5807
      },
      "writtenOn": "2019-12-08T20:28:43Z",
      "side": 1,
      "message": "update comment to put \u00270\u0027 and \u00271\u0027",
      "revId": "edff62485c1e8c5afb62cecbf2fa30ca38becae2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cca83bd_fccc555b",
        "filename": "nfvbench/summarizer.py",
        "patchSetId": 3
      },
      "lineNbr": 492,
      "author": {
        "id": 5807
      },
      "writtenOn": "2019-12-08T20:28:43Z",
      "side": 1,
      "message": "update comment to use \u00270\u0027 and \u00271\u0027",
      "revId": "edff62485c1e8c5afb62cecbf2fa30ca38becae2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e111896d_a25d5875",
        "filename": "nfvbench/summarizer.py",
        "patchSetId": 3
      },
      "lineNbr": 512,
      "author": {
        "id": 5807
      },
      "writtenOn": "2019-12-08T20:28:43Z",
      "side": 1,
      "message": "need to define a variable\nchain_key \u003d str(chain)\nto use as key in the loop",
      "revId": "edff62485c1e8c5afb62cecbf2fa30ca38becae2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1df49dbe_97fb3f06",
        "filename": "nfvbench/traffic_client.py",
        "patchSetId": 3
      },
      "lineNbr": 740,
      "author": {
        "id": 5807
      },
      "writtenOn": "2019-12-07T18:32:23Z",
      "side": 1,
      "message": "We will need to change the type of the \"port\" key here because python3 json.dumps cannot sort mixed key types.\nThis issue is reproducible when you pass --json to the cli and will cause an exception at the end of the run during json.dump(sort_keys\u003dTrue...)\n\nSee https://bugs.python.org/issue25457json dump fails for mixed-type keys when sort_keys is specified\n\ncurrent version (python 2.7):\n\u0027stats\u0027: {0: {\u0027drop_rate_percent\u0027: 0.0,},\n          1: {},\n          \u0027overall\u0027: {}}\n\nnew version (python 3):                             \n\u0027stats\u0027: {\u00270\u0027: {\u0027drop_rate_percent\u0027: 0.0,},\n          \u00271\u0027: {},\n          \u0027overall\u0027: {}}\n \n                                 \nHere is the complete diff to fix this:\n$ diff traffic_client.py /tmp\n741,742d740\n\u003c         for port in self.PORTS:\n\u003c             retDict[port] \u003d {\u0027tx\u0027: {}, \u0027rx\u0027: {}}\n747a746\n\u003e             port_stats \u003d {\u0027tx\u0027: {}, \u0027rx\u0027: {}}\n749c748\n\u003c                 retDict[port][\u0027tx\u0027][key] \u003d int(stats[port][\u0027tx\u0027][key])\n---\n\u003e                 port_stats[\u0027tx\u0027][key] \u003d int(stats[port][\u0027tx\u0027][key])\n752c751\n\u003c                     retDict[port][\u0027rx\u0027][key] \u003d int(stats[port][\u0027rx\u0027][key])\n---\n\u003e                     port_stats[\u0027rx\u0027][key] \u003d int(stats[port][\u0027rx\u0027][key])\n754,755c753,754\n\u003c                     retDict[port][\u0027rx\u0027][key] \u003d 0\n\u003c             retDict[port][\u0027rx\u0027][\u0027avg_delay_usec\u0027] \u003d cast_integer(\n---\n\u003e                     port_stats[\u0027rx\u0027][key] \u003d 0\n\u003e             port_stats[\u0027rx\u0027][\u0027avg_delay_usec\u0027] \u003d cast_integer(\n757c756\n\u003c             retDict[port][\u0027rx\u0027][\u0027min_delay_usec\u0027] \u003d cast_integer(\n---\n\u003e             port_stats[\u0027rx\u0027][\u0027min_delay_usec\u0027] \u003d cast_integer(\n759c758\n\u003c             retDict[port][\u0027rx\u0027][\u0027max_delay_usec\u0027] \u003d cast_integer(\n---\n\u003e             port_stats[\u0027rx\u0027][\u0027max_delay_usec\u0027] \u003d cast_integer(\n761c760,761\n\u003c             retDict[port][\u0027drop_rate_percent\u0027] \u003d self.__get_dropped_rate(retDict[port])\n---\n\u003e             port_stats[\u0027drop_rate_percent\u0027] \u003d self.__get_dropped_rate(port_stats)\n\u003e             retDict[str(port)] \u003d port_stats\n803a804\n\u003e             key \u003d str(key)\n987,988c988,989\n\u003c             tx_rate \u003d results[\"stats\"][idx][\"tx\"][\"total_pkts\"] / self.config.duration_sec\n\u003c             rx_rate \u003d results[\"stats\"][1 - idx][\"rx\"][\"total_pkts\"] / self.config.duration_sec\n---\n\u003e             tx_rate \u003d results[\"stats\"][str(idx)][\"tx\"][\"total_pkts\"] / self.config.duration_sec\n\u003e             rx_rate \u003d results[\"stats\"][str(1 - idx)][\"rx\"][\"total_pkts\"] / self.config.duration_sec",
      "revId": "edff62485c1e8c5afb62cecbf2fa30ca38becae2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": true
    }
  ]
}